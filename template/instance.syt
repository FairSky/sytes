{ ; -*- lisp -*-
(eval-when-compile

  ;; autohandler stuff
  (defmacro @inherit (name)
    `(eval-when-compile
       (defglobal *autohandler* ,name)))

  (defun @attr (name . value)
    (let ((attr (*attributes*)))
      (if value
          (set-hash attr name (car value))
          (get-hash attr name))))

  (defmacro import (template . names)
    `(let ((ctx (require ,template)))
       ,@(if names
             (mapcar (lambda (name)
                       `(&defglobal! ,name (&dot-lookup ctx ,name)))
                     names)
             `(ctx))))

  )
}
